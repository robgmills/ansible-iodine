---
sudo: required
language: python
python: "2.7"

env:
  - SITE=test.yml

before_install:
  - sudo apt-get update -qq
#  - sudo apt-get install -y curl

install:
  # Install Ansible.
  - pip install ansible

  # Add ansible.cfg to pick up roles path.
  - "{ echo '[defaults]'; echo 'roles_path = ../'; } >> ansible.cfg"

script:
  # Check the role/playbook's syntax.
  - "ansible-playbook -i tests/inventory tests/$SITE --syntax-check"

  # Run the role/playbook with ansible-playbook.
  - "ansible-playbook -i tests/inventory tests/$SITE --connection=local --sudo"

  # Run the role/playbook again, checking to make sure it's idempotent.
  - >
    ansible-playbook -i tests/inventory tests/$SITE --connection=local --sudo
    | grep -q 'changed=0.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)

  - >
    which iodine 2>&1 && (echo 'Check iodine client exists: pass' && exit 0) || (echo 'Check iodine client exists: fail' && exit 1)

  - >
    which iodined 2>&1 && (echo 'Check iodine daemon exists: pass' && exit 0) || (echo 'Check iodine daemon exists: fail' && exit 1)

  - "sudo cat /etc/default/iodine"

  - >
    sudo grep -P '^IODINED_ARGS=".*"' /etc/default/iodine 2>&1
    && (echo 'Check iodined args: pass' && exit 0)
    || (echo 'Check iodined args: fail' && exit 1)

  - >
    sudo grep -P '^IODINED_PASSWORD=".*"' /etc/default/iodine 2>&1
    && (echo 'Check iodined password: pass' && exit 0)
    || (echo 'Check iodined password: fail' && exit 1)

  - "sudo service iodined status"

#  - > 
#    sudo service iodined status | grep "Active: active \(running\)"
#    && (echo 'Check that iodined is running: pass' && exit 0)
#    || (echo 'Check that iodined is running: fail' && exit 1)

  - "netstat -an"

#  - >
#    netstat -an | grep 0.0.0.0:53
#    && (echo 'Check that port 53 is `LISTEN`ing: pass' && exit 0)
#    || (echo 'Check that iodine is `LISTEN`ing: fail' && exit 1)

#  - >
#    dig @localhost dnstunnel.robgmills.com
#    && (echo 'Check that iodined responds to DNS queries: pass' && exit 0)
#    || (echo 'Check that iodined responds to DNS queries: fail' && exit 1)

notifications:
  webhooks: https://galaxy.ansible.com/api/v1/notifications/
